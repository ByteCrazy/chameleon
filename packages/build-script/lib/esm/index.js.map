{
  "version": 3,
  "sources": ["../../src/config/base.ts", "../../src/core/devServer.ts", "../../src/config/vite.dev.ts", "../../src/config/vite.common.ts", "../../src/core/doBuild.ts", "../../src/config/vite.build.ts", "../../src/index.ts"],
  "sourcesContent": ["import path from 'path';\nimport fs from 'fs-extra';\nimport { LibraryOptions, UserConfig } from 'vite';\nimport argv from 'yargs-parser';\n\nconst cliArgs: {\n  dev: boolean;\n  build: boolean;\n  watch: boolean;\n} = argv(process.argv.slice(2)) as any;\n\nexport const CLI_ARGS_OBJ = cliArgs;\n\nexport const PROJECT_ROOT = path.resolve(process.cwd());\n\nlet customConfig: any = {};\n\nlet customConfigPath = `${PROJECT_ROOT}/build.config.js`;\n\nif (fs.pathExistsSync(customConfigPath)) {\n  customConfig = require(customConfigPath);\n}\n\nexport type BuildScriptConfig = {\n  entry: string;\n  libName?: string;\n  external?: string[];\n  global?: Record<string, string>;\n  formats?: LibraryOptions['formats'];\n  vite?: UserConfig;\n};\n\nexport const CUSTOM_CONFIG: BuildScriptConfig = customConfig;\n", "import { createServer } from 'vite';\n\nimport devConfig from '../config/vite.dev';\n\nexport const doDev = async () => {\n  console.log('doDe1v');\n  let server = await createServer(devConfig);\n\n  await server.listen();\n\n  server.printUrls();\n};\n", "import { mergeConfig } from 'vite';\nimport commonConfig from './vite.common';\nimport { CUSTOM_CONFIG, PROJECT_ROOT } from './base';\n\nlet config = mergeConfig(commonConfig, {\n  root: PROJECT_ROOT,\n  mode: 'development',\n  configFile: false,\n  server: {\n    port: 3000,\n  },\n});\n\n// https://vitejs.dev/config/\nexport default mergeConfig(config, CUSTOM_CONFIG.vite || {});\n", "import { defineConfig } from 'vite';\nimport path from 'path';\nimport react from '@vitejs/plugin-react';\nimport { PROJECT_ROOT, CUSTOM_CONFIG } from './base';\n\nif (!CUSTOM_CONFIG.entry) {\n  throw new Error('entry not find');\n}\n// https://vitejs.dev/config/\nexport default defineConfig({\n  build: {\n    lib: {\n      entry: path.resolve(PROJECT_ROOT, CUSTOM_CONFIG.entry),\n      formats: CUSTOM_CONFIG.formats || ['cjs', 'es'],\n      fileName: (format) => `${CUSTOM_CONFIG.libName}.${format}.js`,\n    },\n    rollupOptions: {\n      // \u786E\u4FDD\u5916\u90E8\u5316\u5904\u7406\u90A3\u4E9B\u4F60\u4E0D\u60F3\u6253\u5305\u8FDB\u5E93\u7684\u4F9D\u8D56\n      external: CUSTOM_CONFIG.external || [],\n      output: {\n        // \u5728 UMD \u6784\u5EFA\u6A21\u5F0F\u4E0B\u4E3A\u8FD9\u4E9B\u5916\u90E8\u5316\u7684\u4F9D\u8D56\u63D0\u4F9B\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\n        globals: CUSTOM_CONFIG.global || {},\n      },\n    },\n  },\n  plugins: [react()],\n});\n", "import { build } from 'vite';\n\nimport buildConfig from '../config/vite.build';\n\nexport const doBuild = async () => {\n  console.log('start to build .....');\n  await build(buildConfig);\n  console.log('build finished.');\n};\n", "import { mergeConfig } from 'vite';\nimport { CLI_ARGS_OBJ, CUSTOM_CONFIG, PROJECT_ROOT } from './base';\nimport commonConfig from './vite.common';\n\nlet config = mergeConfig(commonConfig, {\n  root: PROJECT_ROOT,\n  mode: 'production',\n  configFile: false,\n  build: {\n    watch: CLI_ARGS_OBJ.watch ?? false,\n  },\n});\n\n// https://vitejs.dev/config/\nexport default mergeConfig(config, CUSTOM_CONFIG.vite || {});\n", "import { CLI_ARGS_OBJ } from './config/base';\nimport { doDev } from './core/devServer';\nimport { doBuild } from './core/doBuild';\n\nif (CLI_ARGS_OBJ.build) {\n  doBuild();\n} else {\n  doDev();\n}\n\nexport const a = () => {\n  return 1;\n};\n"],
  "mappings": ";;;;;;;;;AAAA,OAAO,UAAU;AACjB,OAAO,QAAQ;AAEf,OAAO,UAAU;AAEjB,IAAM,UAIF,KAAK,QAAQ,KAAK,MAAM,CAAC,CAAC;AAEvB,IAAM,eAAe;AAErB,IAAM,eAAe,KAAK,QAAQ,QAAQ,IAAI,CAAC;AAEtD,IAAI,eAAoB,CAAC;AAEzB,IAAI,mBAAmB,GAAG;AAE1B,IAAI,GAAG,eAAe,gBAAgB,GAAG;AACvC,iBAAe,UAAQ;AACzB;AAWO,IAAM,gBAAmC;;;AChChD,SAAS,oBAAoB;;;ACA7B,SAAS,mBAAmB;;;ACA5B,SAAS,oBAAoB;AAC7B,OAAOA,WAAU;AACjB,OAAO,WAAW;AAGlB,IAAI,CAAC,cAAc,OAAO;AACxB,QAAM,IAAI,MAAM,gBAAgB;AAClC;AAEA,IAAO,sBAAQ,aAAa;AAAA,EAC1B,OAAO;AAAA,IACL,KAAK;AAAA,MACH,OAAOC,MAAK,QAAQ,cAAc,cAAc,KAAK;AAAA,MACrD,SAAS,cAAc,WAAW,CAAC,OAAO,IAAI;AAAA,MAC9C,UAAU,CAAC,WAAW,GAAG,cAAc,WAAW;AAAA,IACpD;AAAA,IACA,eAAe;AAAA,MAEb,UAAU,cAAc,YAAY,CAAC;AAAA,MACrC,QAAQ;AAAA,QAEN,SAAS,cAAc,UAAU,CAAC;AAAA,MACpC;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS,CAAC,MAAM,CAAC;AACnB,CAAC;;;ADtBD,IAAI,SAAS,YAAY,qBAAc;AAAA,EACrC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ;AAAA,IACN,MAAM;AAAA,EACR;AACF,CAAC;AAGD,IAAO,mBAAQ,YAAY,QAAQ,cAAc,QAAQ,CAAC,CAAC;;;ADVpD,IAAM,QAAQ,YAAY;AAC/B,UAAQ,IAAI,QAAQ;AACpB,MAAI,SAAS,MAAM,aAAa,gBAAS;AAEzC,QAAM,OAAO,OAAO;AAEpB,SAAO,UAAU;AACnB;;;AGXA,SAAS,aAAa;;;ACAtB,SAAS,eAAAC,oBAAmB;AAA5B;AAIA,IAAIC,UAASC,aAAY,qBAAc;AAAA,EACrC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,OAAO;AAAA,IACL,QAAO,kBAAa,UAAb,YAAsB;AAAA,EAC/B;AACF,CAAC;AAGD,IAAO,qBAAQA,aAAYD,SAAQ,cAAc,QAAQ,CAAC,CAAC;;;ADVpD,IAAM,UAAU,YAAY;AACjC,UAAQ,IAAI,sBAAsB;AAClC,QAAM,MAAM,kBAAW;AACvB,UAAQ,IAAI,iBAAiB;AAC/B;;;AEJA,IAAI,aAAa,OAAO;AACtB,UAAQ;AACV,OAAO;AACL,QAAM;AACR;AAEO,IAAM,IAAI,MAAM;AACrB,SAAO;AACT;",
  "names": ["path", "path", "mergeConfig", "config", "mergeConfig"]
}
